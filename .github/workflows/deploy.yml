name: Web Widget Deploy
on:
  workflow_dispatch:
    inputs:
      deployTo:
        type: choice
        description: 'Deploy env(dev/staging/kinship-staging-all/kinship-prod-all/whitelabel/tsc-staging/floof-staging/iams-staging/greatergood-staging/walmart-staging/fur-life-staging/prod/tsc/floof/iams/greatergood/walmart/fur-life/thewildest/thewildest-staging)'
        required: true
        options:
          - tsc-staging
          - iams-staging
          - walmart-staging
          - thewildest-staging
          - greatergood-staging
          - fur-life-staging
          - wildestpack-staging
          - tsc
          - iams
          - walmart
          - thewildest
          - greatergood
          - fur-life
          - kinship-staging-all
          - kinship-prod-all

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Dart SDK Step 1
        run: sudo apt update
      - name: Setup Dart SDK Step 2
        run: sudo apt -y install curl
      - name: Setup Dart SDK Step 3
        run: curl -sLO https://storage.googleapis.com/dart-archive/channels/stable/release/2.10.5/linux_packages/dart_2.10.5-1_amd64.deb && sudo dpkg -i dart_2.10.5-1_amd64.deb

      - uses: actions/checkout@v2
        with:
          ref: ${{ env.GITHUB_REF }}
      - name: Forget about Host Verification Check for Github.com
        run: |
          ssh -T -oStrictHostKeyChecking=accept-new git@github.com || true
      - name: Configure build settings
        run: cp build.example.yaml build.yaml
      - name: Add dart bin to PATH
        run: echo "/usr/lib/dart/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: pub get
      - name: Run tests domain
        working-directory: ./domain
        run: |
          pub get
          pub run test
      - name: Run tests widget
        run: pub run build_runner test --fail-on-severe -- -p chrome
      - name: Build release && deploy
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku plugins:install heroku-cli-static
          script/deploy.sh ${{ github.event.inputs.deployTo }}
      - name: Slack notification devops channel
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_DEVOPS_CHANNEL }}
          SLACK_MESSAGE: 'Vet Insight ${{ github.event.inputs.deployTo }} deployment succeeded'
          SLACK_COLOR: '#00FF00'
          SLACK_USERNAME: 'Github Actions'
          SLACK_ICON_EMOJI: ':github_actions:'
      - name: Slack notification devops channel
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_DEVOPS_CHANNEL }}
          SLACK_MESSAGE: 'Vet Insight ${{ github.event.inputs.deployTo }} deployment failed'
          SLACK_COLOR: '#FF0000'
          SLACK_USERNAME: 'Github Actions'
          SLACK_ICON_EMOJI: ':github_actions:'
      - name: Slack notification team channel
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_VI_CHANNEL }}
          SLACK_MESSAGE: 'Vet Insight ${{ github.event.inputs.deployTo }} deployment succeeded'
          SLACK_COLOR: '#00FF00'
          SLACK_USERNAME: 'Github Actions'
          SLACK_ICON_EMOJI: ':github_actions:'
      - name: Slack notification team channel
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_VI_CHANNEL }}
          SLACK_MESSAGE: 'Vet Insight ${{ github.event.inputs.deployTo }} deployment failed'
          SLACK_COLOR: '#FF0000'
          SLACK_USERNAME: 'Github Actions'
          SLACK_ICON_EMOJI: ':github_actions:'
